---
const { title, img, desc, url, badge, tags, target = '_blank' } = Astro.props;
import { Image } from 'astro:assets';

let isLoading = true;
---

<style>
	.image-container.loading .skeleton {
		display: block;
		width: 100%;
		height: 100%;
		background: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);
		background-size: 80rem 14rem;
		animation: shimmer 2s infinite linear;
	}

	.image-container .skeleton {
		display: none;
	}

	@keyframes shimmer {
		0% {
			background-position: -40rem 0;
		}
		100% {
			background-position: 40rem 0;
		}
	}

	.image-container img {
		display: none;
	}

	.image-container:not(.loading) img {
		display: block;
	}
</style>
<div class="rounded-lg bg-base-100 hover:shadow-xl transition ease-in-out hover:scale-[102%]">
	<a href={url} target={target}>
		<div class="hero-content flex-col md:flex-row">
			<!-- {img && <Image src={img} height={422} width={750} format="webp" alt={title} class="max-w-full md:max-w-[13rem] rounded-lg" />} -->
			{
				img && (
					<div class={`image-container ${isLoading ? 'loading' : ''}`} data-title={title}>
						<Image src={img} height={422} width={750} format="webp" alt={title} class="max-w-full md:max-w-[13rem] rounded-lg" />
						<div class="skeleton" hidden={!isLoading} />
					</div>
				)
			}
			<div class="grow w-full">
				<h1 class="text-xl font-bold">
					{title}
					{badge && <div class="badge badge-secondary mx-2">{badge}</div>}
				</h1>
				{desc && ((Array.isArray(desc) && desc.map((d) => <p class="py-1 text-1xl">{d}</p>)) || <p class="py-1 text-1xl">{desc}</p>)}
				<div class="card-actions justify-end">
					{tags && tags.map((tag) => <div class="badge badge-outline">{tag}</div>)}
				</div>
			</div>
		</div>
	</a>
</div>
<script is:inline>
	setupLoadEventListenersForAllImagesVisible();
	function setupLoadEventListenersForAllImagesVisible() {
		const allImages = document.querySelectorAll('img');

		if (!allImages.length) return;
		allImages.forEach((image) =>
			image.addEventListener('load', (loadEvent) => {
				console.log('object', loadEvent);
				const imageElement = loadEvent.target;
				if (!imageElement.parentElement) return;
				imageElement.parentElement.classList.remove('loading');
			})
		);
	}
</script>
